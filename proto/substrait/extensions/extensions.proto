// SPDX-License-Identifier: Apache-2.0
syntax = "proto3";

package substrait.extensions;

import "google/protobuf/any.proto";

option csharp_namespace = "Substrait.Protobuf";
option java_multiple_files = true;
option java_package = "io.substrait.proto";

message SimpleExtensionURI {
  // A surrogate key used in the context of a single plan used to reference the
  // URI associated with an extension.
  uint32 extension_uri_anchor = 1;

  // The URI where this extension YAML can be retrieved. This is the "namespace"
  // of this extension.
  string uri = 2;
}

// Describes a type of extension.  For example, "function", "data type",
// "type variation", or "file format".  When a spot in the plan can be extended
// (an extension point) then that point should define what type of extension
// is allowed.  When extensions are listed in the extension declaration each
// extension should report what type it fulfills.
message ExtensionType {
  // The URI of the spec that defines this extension type
  uint32 extension_uri_reference = 1;
  // An anchor to reference this extension type in extension declarations
  uint32 extension_type_anchor = 2;
  // The name of the extension type
  string name = 3;
}

// A declaration of an extension that will be used in the plan.  For each extension
// an anchor is defined which will be used to reference the extension.
message SimpleExtensionDeclaration {
  // The type of extension that is being supplied
  // This should be a reference to an extension_type_anchor in an ExtensionType
  // message.
  uint32 extension_type_reference = 1;
  // A reference to the URI where this extension implementation is defined.
  uint32 extension_uri_reference = 2;
  // An anchor to reference this extension elsewhere in this plan
  uint32 extension_anchor = 3;
  // The name of this extension implementation
  string name = 4;
}

// A generic object that can be used to embed additional extension information
// into the serialized substrait plan.
message AdvancedExtension {
  // An optimization is helpful information that don't influence semantics. May
  // be ignored by a consumer.
  google.protobuf.Any optimization = 1;

  // An enhancement alter semantics. Cannot be ignored by a consumer.
  google.protobuf.Any enhancement = 2;
}
