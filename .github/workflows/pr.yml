name: PR Build Check

on:
  pull_request:
jobs:
  site:
    name: Build Website
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Setup Python
        uses: ./.github/actions/dev-tool-python
        with:
          python-version: "3.8"
      - name: Install dependencies
        run: python3 -m pip install -r ./site/requirements.txt
      - name: Generate Static Site
        run: mkdocs build
        working-directory: ./site
  editorconfig-checker:
    name: Check editorconfig
    runs-on: ubuntu-latest
    steps:
      - uses: editorconfig-checker/action-editorconfig-checker@v1
  proto-format-check:
    name: Check Protobuf Style
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: bufbuild/buf-setup-action@v1.9.0
      - run: buf format --diff --exit-code
  proto:
    name: Check Protobuf
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: bufbuild/buf-setup-action@v1.9.0
      - uses: bufbuild/buf-lint-action@v1
      - name: check for breaking changes
        id: check-breaking
        run: |
          set -euo pipefail

          if ! buf breaking --against 'https://github.com/substrait-io/substrait.git#branch=main'; then
            breaking="true"
          else
            breaking="false"
          fi

          echo "::set-output name=breaking::${breaking}"
      - name: check whether the commit message includes a breaking change footer
        if: ${{ fromJson(steps.check-breaking.outputs.breaking) }}
        run: |
          set -euo pipefail
          # check commits for a BREAKING CHANGE section if any breaking changes occurred
          ./ci/commit_messages.sh '${{ github.event.pull_request.commits_url }}' | grep 'BREAKING CHANGE: '
      - name: Compile protobuf
        run: buf generate
  yamllint:
    name: Lint YAML extensions
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Run yamllint
        run: yamllint .
  yamlvalidate:
    name: Validate YAML extensions
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: "14"
      - run: npm install -g ajv-cli
      - run: |
          set -euo pipefail
          for i in $(ls);
          do
            ajv validate -s ../text/simple_extensions_schema.yaml --strict=true --spec=draft2020 -d "$i"
          done
        working-directory: ./extensions
  dry_run_release:
    name: Dry-run release
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - uses: bufbuild/buf-setup-action@v1.9.0
      - uses: actions/setup-node@v3
        with:
          node-version: "16"
      - run: ./ci/release/dry_run.sh
